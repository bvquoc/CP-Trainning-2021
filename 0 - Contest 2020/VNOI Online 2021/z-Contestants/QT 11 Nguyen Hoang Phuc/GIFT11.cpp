#include <bits/stdc++.h>using namespace std;const int N = 2005;const int MOD = 998244353;int n, a[N];pair<int,int> evlist[N];bool used[N];int per[N], resub1;int add(int a, int b) {    if ((a+=b) >= MOD) a -= MOD;    return a;}pair<int,int> eval(int x) {    int cnt = 0, sum = 0;    while (x > 0) {        sum += (cnt & 1 ? x % 10 : -x % 10);        x /= 10;        cnt++;    }    if (cnt%2==0) sum = -sum;    return {sum,cnt};}void process() {    int cnt = 0;    int sum = 0;    for (int i = 1; i <= n; ++i) {        pair<int,int> p = evlist[per[i]];        if (cnt & 1) {            sum -= p.first;        }        else {            sum += p.first;        }        cnt += p.second;    }    if (sum % 11 == 0) {        resub1++;    }}void permute(int p) {    for (int i = 1; i <= n; ++i) {        if (!used[i]) {            per[p] = i;            used[i] = true;            if (p == n) process();            else permute(p+1);            used[i] = false;        }    }}int sub1() {    resub1 = 0;    permute(1);    return resub1;}int sub2() {    int sum = 0;    int num = 1;    for (int i = 1; i <= n; ++i) {        sum += evlist[i].first;        num = 1LL * num * i % MOD;    }    if (sum % 11 == 0) {        return num;    } else return 0;}int num3[N][N][11], fac[N];int F(int p, int odd, int rem) {    if (p == n+1)        return (odd == (n+1)/2 && rem == 0) ? 1LL * fac[odd] * fac[n-odd] % MOD : 0;    if (num3[p][odd][rem] != -1)        return num3[p][odd][rem];    pair<int,int> s = evlist[p];    int n1 = F(p+1,odd,((rem-s.first)%11+11)%11);    int n2 = F(p+1,odd+1,((rem+s.first)%11+11)%11);    return num3[p][odd][rem] = add(n1,n2);}int sub3() {    memset(num3,-1,sizeof num3);    for (int i = 1; i <= n; ++i)    for (int j = 1; j <= n; ++j)    for (int r = 0; r < 11; ++r) {        num3[i][j][r] = -1;    }    return F(1,0,0);}int main() {    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);    freopen("GIFT11.INP", "r", stdin);    freopen("GIFT11.OUT", "w", stdout);    fac[0] = 1;    for (int i = 1; i < N; ++i) {        fac[i] = 1LL * fac[i-1] * i % MOD;    }    int t; cin >> t;    while (t--) {        bool odd = false, even = false;        cin >> n;        for (int i = 1; i <= n; ++i) {            cin >> a[i];            evlist[i] = eval(a[i]);            if (evlist[i].second & 1) {                odd = true;            }            else even = true;        }        if (n <= 8) {            cout << sub1() << '\n';        }        else if (even && !odd) {            cout << sub2() << '\n';        }        else if (odd && !even){            cout << sub3() << '\n';        }        else cout << sub1() << '\n';    }    return 0;}