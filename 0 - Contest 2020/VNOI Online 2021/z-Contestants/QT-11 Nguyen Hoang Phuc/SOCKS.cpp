#include <bits/stdc++.h>using namespace std;const int N = 5e5+7;int n, q;vector<int> adj[N];int deg[N];vector<int> query;bool color[N];void sub1() {    int num = 0;    for (int i = 1; i <= n; ++i) {        num += color[i];    }    cout << (num!=0) << '\n';    for (int i = 0; i < q; ++i) {        int p = query[i];        if ((color[p] = !color[p])) {            num++;        }        else num--;        cout << (num!=0) << '\n';    }}int main() {    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);    freopen("SOCKS.INP", "r", stdin);    freopen("SOCKS.OUT", "w", stdout);    cin >> n >> q;    for (int i = 1; i <= n; ++i) {        cin >> color[i];    }    for (int i = 1; i < n; ++i) {        int x, y;        cin >> x >> y;        adj[x].push_back(y);        adj[y].push_back(x);        deg[x]++;        deg[y]++;    }    for (int i = 1; i <= q; ++i) {        int x; cin >> x;        query.push_back(x);    }    int nd2 = 0, nd3 = 0;    for (int i = 1; i <= n; ++i) {        if (deg[i] == 2) {            nd2++;        }        else if (deg[i] == 3) {            nd3++;        }    }    if (nd2 == n-2) {        sub1();    }    else sub1();    return 0;}