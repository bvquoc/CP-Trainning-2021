#include <bits/stdc++.h>using namespace std;struct coolmac {    int l, r;    friend istream& operator >> (istream&is, coolmac&cm) {        is >> cm.l >> cm.r;        return is;    }};const int MAX = 1e5;int n, m;vector<coolmac> cm;int mdeg = 1e9, res;int main() {    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);    freopen("COOLMAC.INP", "r", stdin);    freopen("COOLMAC.OUT", "w", stdout);    cin >> m;    cm.resize(m);    for (int i = 0; i < m; ++i) {        cin >> cm[i];    }    cin >> n;    for (int i = 1; i <= n; ++i) {        int x; cin >> x;        mdeg = min(mdeg, x);    }    sort(cm.begin(),cm.end(),[&](coolmac&a,coolmac&b) {        return a.l > b.l || a.l == b.l && a.r < b.r;    });    for (int i = m-1, mx = 0; i >= 0; --i) {        if (cm[i].r <= mx) {            cm[i] = cm.back();            cm.pop_back();        } else mx = max(mx, cm[i].r);    }    sort(cm.begin(),cm.end(),[&](coolmac&a,coolmac&b) {        return a.l < b.l;    });    m = cm.size();    int rig = mdeg-1;    for (int i = 0; i < m; ++i) {        if (cm[i].l > rig+1) return cout << -1, 0;        if (i+1 == m || cm[i+1].l > rig+1) {            res++; rig = cm[i].r;        }        if (rig >= MAX) {            return cout << res, 0;        }    }    cout << -1;    return 0;}